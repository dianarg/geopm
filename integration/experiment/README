## geopm/integration/experiment/README
#########################

How to run an experiment



How to set up a new experiment with an existing app


How to add a new application configuration



integration/
 L experiment/
   L __init__.py  (docs only)
   L monitor/   (baseline runs)
     L run_dgemm.py
   L power_sweep/
     L __init__.py  ()
     L run_dgemm.py
     L run_minife.py
     L node_efficiency.py  ( achieved_freq_histogram() )
     L launch.py  ( generic launch function
   L freq_sweep/
     L __init__.py  ()
     L run_dgemm.py
     L run_minife.py
     L runtime_energy_scaling.py  ( plots runtime and energy vs. frequency )

 L apps
   L dgemm.py  ( name of exe, config file for big-o, ranks per node )
   L dgemm_4rank.py
   L dgemm_imbalance.py
   L minife
     L minife.py    ( AppConf(num_node)  )
     L minife_imbalance.py  ( AppConf)
     L calculate_size.py
     L intel.patch
     L download_and_build.sh
     L miniFE_openmp-2.0-rc3  (downloaded source)
   L nekbone
     L go.py
     L go1.py
   L hacc
     L conf.py
     L conf_4rank_16th.py


### do_everything.slurm ##

# does launch step
./experiment/power_sweep/run_dgemm.py --nodes=4 --output-dir=test7 --machine-config=mcfly.machine
./run_dgemm.py
./run_dgemm_imbalance.py



# alternative
./run.py --app=dgemm_imbalance --nodes=8


./experiment/power_sweep/node_efficiency.py





######################

GEOPM EXPERIMENT SCRIPTS
------------------------

Glossary of terms
-----------------
application -
experiment - a run step followed by one or more analysis steps in order to answer a question about
run step - a sequence of job launches of an application
analysis step - post-process, summarize, and interpret data from GEOPM reports and traces
report/trace - output files from the GEOPM runtime.  Refer to the geopmlaunch(1) man page for more information.

The scripts in this directory are intended to be used as a starting
point for various types of experiments using GEOPM.
An experiment consists of a run step, containing application launches with GEOPM,
and an analysis step, in which the reports and traces produced by the run step
are processed, interpreted

Scripts beginning
with "run_" are used to launch specific applications with the GEOPM
runtime.  Other scripts detailed below can be used to perform analysis
on the resulting reports and traces.

NOTE ON APPLICATIONS
--------------------

In general, the current model for run scripts is to have a different
script for each application.  This is because applications have
specific runtime requirements and are scaled to different node and
rank counts.

QUICKSTART
----------
TODO: describe command line arguments
All scripts have a required argument for the compute node configuration (--machine-config)

How to run a node efficiency experiment:
1. Run run_power_sweep_dgemm.py --output-dir=my_data --machine-config=mcfly.conf
2. Run node_efficiency.py --output-dir=my_data --machine-config=mcfly.conf

#####

1. integration/experiment/power_sweep.py
2. integration/experiment/power_sweep/__init__.py

from integration.experiment import power_sweep, balancer_comparison
import integration.experiment.power_sweep as power_sweep
power_sweep.launch()


from integration.experiment.power_sweep import launch_power_sweep

launch_power_sweep()
####

## geopm/integration/experiment/power_sweep/README
POWER SWEEP-BASED EXPERIMENTS
-----------------------------
subdir: power_sweep

run_power_sweep_dgemm.py:

  - Runs DGEMM on a number of nodes over a range of power caps.

power_sweep.py:

  - Prints basic summary of the runtime and energy characteristics at
    each power cap.

balancer_comparison.py

  - Compares the total runtime and energy of the application when run
    with the power balancer against the power governor and prints the
    runtime and energy savings.


FREQUENCY SWEEP-BASED EXPERIMENTS
---------------------------------
Coming soon.
